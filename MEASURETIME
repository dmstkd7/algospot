//#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
using namespace std;



struct FenwickTree {
	vector<int> tree;
	FenwickTree(int n) : tree(n + 1) {}

	int sum(int pos){
		++pos;
		int ret = 0;
		while (pos > 0){
			ret += tree[pos];
			pos &= (pos - 1);
		}
		return ret;
	}

	void add(int pos, int val) {
		++pos;
		while (pos < tree.size()){
			tree[pos] += val;
			pos += (pos & -pos);
		}
	}
};

long long countMoves(const vector<int>& A){
	FenwickTree tree(1000000);
	long long ret = 0;
	for (int i = 0; i < A.size(); ++i){
		ret += tree.sum(999999) - tree.sum(A[i]);
		tree.add(A[i], 1);
	}
	return ret;
}


int main(void)
{
	
	int Test_Case;
	int N;
	int temp;
	long long result;
	vector<int> A;

	scanf("%d", &Test_Case);
	for (int i = 1; i <= Test_Case; ++i){
		scanf("%d", &N);

		for (int i = 0; i < N; ++i){
			scanf("%d", &temp);
			A.push_back(temp);
		}
		result = countMoves(A);


		printf("%d\n", result);

		A.clear();
	}

	

	return 0;
}
